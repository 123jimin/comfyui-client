{
  "title": "Node Types",
  "type": "object",
  "properties": {
    "KSampler": {
      "title": "KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "CheckpointLoaderSimple": {
      "title": "CheckpointLoaderSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders"
    },
    "CLIPTextEncode": {
      "title": "CLIPTextEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, clip",
          "properties": {
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "CLIPSetLastLayer": {
      "title": "CLIPSetLastLayer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, stop_at_clip_layer",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "stop_at_clip_layer": {
              "type": "number"
            }
          },
          "required": ["clip", "stop_at_clip_layer"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "VAEDecode": {
      "title": "VAEDecode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncode": {
      "title": "VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["pixels", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncodeForInpaint": {
      "title": "VAEEncodeForInpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, mask, grow_mask_by",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "mask": {
              "type": "MASK"
            },
            "grow_mask_by": {
              "type": "number"
            }
          },
          "required": ["pixels", "vae", "mask", "grow_mask_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "VAELoader": {
      "title": "VAELoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae_name",
          "properties": {
            "vae_name": {
              "type": "string"
            }
          },
          "required": ["vae_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VAE",
          "items": [
            {
              "type": "VAE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "EmptyLatentImage": {
      "title": "EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscale": {
      "title": "LatentUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, width, height, crop",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["samples", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscaleBy": {
      "title": "LatentUpscaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, scale_by",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["samples", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentFromBatch": {
      "title": "LatentFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, batch_index, length",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "batch_index": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["samples", "batch_index", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RepeatLatentBatch": {
      "title": "RepeatLatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, amount",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["samples", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "SaveImage": {
      "title": "SaveImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "filename_prefix"]
        }
      },
      "$category": "image"
    },
    "PreviewImage": {
      "title": "PreviewImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "image"
    },
    "LoadImage": {
      "title": "LoadImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "LoadImageMask": {
      "title": "LoadImageMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "string"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageScale": {
      "title": "ImageScale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, width, height, crop",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["image", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageScaleBy": {
      "title": "ImageScaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, scale_by",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageInvert": {
      "title": "ImageInvert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImageBatch": {
      "title": "ImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            }
          },
          "required": ["image1", "image2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImagePadForOutpaint": {
      "title": "ImagePadForOutpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, left, top, right, bottom, feathering",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": ["image", "left", "top", "right", "bottom", "feathering"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "EmptyImage": {
      "title": "EmptyImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size, color",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ConditioningAverage": {
      "title": "ConditioningAverage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from, conditioning_to_strength",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            },
            "conditioning_to_strength": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "conditioning_from",
            "conditioning_to_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningCombine": {
      "title": "ConditioningCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_1, conditioning_2",
          "properties": {
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningConcat": {
      "title": "ConditioningConcat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_to", "conditioning_from"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetArea": {
      "title": "ConditioningSetArea",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaPercentage": {
      "title": "ConditioningSetAreaPercentage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaStrength": {
      "title": "ConditioningSetAreaStrength",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetMask": {
      "title": "ConditioningSetMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, mask, strength, set_cond_area",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "mask": {
              "type": "MASK"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["conditioning", "mask", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "KSamplerAdvanced": {
      "title": "KSamplerAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, start_at_step, end_at_step, return_with_leftover_noise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "string"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "end_at_step": {
              "type": "number"
            },
            "return_with_leftover_noise": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "start_at_step",
            "end_at_step",
            "return_with_leftover_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "SetLatentNoiseMask": {
      "title": "SetLatentNoiseMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, mask",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["samples", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "LatentComposite": {
      "title": "LatentComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples_to, samples_from, x, y, feather",
          "properties": {
            "samples_to": {
              "type": "LATENT"
            },
            "samples_from": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "feather": {
              "type": "number"
            }
          },
          "required": ["samples_to", "samples_from", "x", "y", "feather"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentBlend": {
      "title": "LatentBlend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, blend_factor",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "blend_factor": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "blend_factor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "LatentRotate": {
      "title": "LatentRotate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, rotation",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "rotation": {
              "type": "string"
            }
          },
          "required": ["samples", "rotation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentFlip": {
      "title": "LatentFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, flip_method",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "flip_method": {
              "type": "string"
            }
          },
          "required": ["samples", "flip_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentCrop": {
      "title": "LatentCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, width, height, x, y",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["samples", "width", "height", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LoraLoader": {
      "title": "LoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "loaders"
    },
    "CLIPLoader": {
      "title": "CLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name, type",
          "properties": {
            "clip_name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "UNETLoader": {
      "title": "UNETLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name, weight_dtype",
          "properties": {
            "unet_name": {
              "type": "string"
            },
            "weight_dtype": {
              "type": "string"
            }
          },
          "required": ["unet_name", "weight_dtype"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "DualCLIPLoader": {
      "title": "DualCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, type",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "CLIPVisionEncode": {
      "title": "CLIPVisionEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, image",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["clip_vision", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION_OUTPUT",
          "items": [
            {
              "type": "CLIP_VISION_OUTPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "StyleModelApply": {
      "title": "StyleModelApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, style_model, clip_vision_output",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "style_model": {
              "type": "STYLE_MODEL"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            }
          },
          "required": ["conditioning", "style_model", "clip_vision_output"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/style_model"
    },
    "unCLIPConditioning": {
      "title": "unCLIPConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, clip_vision_output, strength, noise_augmentation",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            },
            "strength": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "clip_vision_output",
            "strength",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ControlNetApply": {
      "title": "ControlNetApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, control_net, image, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "control_net", "image", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetApplyAdvanced": {
      "title": "ControlNetApplyAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetLoader": {
      "title": "ControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_name",
          "properties": {
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "DiffControlNetLoader": {
      "title": "DiffControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, control_net_name",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["model", "control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "StyleModelLoader": {
      "title": "StyleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style_model_name",
          "properties": {
            "style_model_name": {
              "type": "string"
            }
          },
          "required": ["style_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STYLE_MODEL",
          "items": [
            {
              "type": "STYLE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "CLIPVisionLoader": {
      "title": "CLIPVisionLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name",
          "properties": {
            "clip_name": {
              "type": "string"
            }
          },
          "required": ["clip_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION",
          "items": [
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "VAEDecodeTiled": {
      "title": "VAEDecodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae, tile_size",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": ["samples", "vae", "tile_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "VAEEncodeTiled": {
      "title": "VAEEncodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, tile_size",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": ["pixels", "vae", "tile_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "unCLIPCheckpointLoader": {
      "title": "unCLIPCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, CLIP_VISION",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "loaders"
    },
    "GLIGENLoader": {
      "title": "GLIGENLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: gligen_name",
          "properties": {
            "gligen_name": {
              "type": "string"
            }
          },
          "required": ["gligen_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GLIGEN",
          "items": [
            {
              "type": "GLIGEN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "GLIGENTextBoxApply": {
      "title": "GLIGENTextBoxApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, clip, gligen_textbox_model, text, width, height, x, y",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "clip": {
              "type": "CLIP"
            },
            "gligen_textbox_model": {
              "type": "GLIGEN"
            },
            "text": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "clip",
            "gligen_textbox_model",
            "text",
            "width",
            "height",
            "x",
            "y"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/gligen"
    },
    "InpaintModelConditioning": {
      "title": "InpaintModelConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels, mask",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["positive", "negative", "vae", "pixels", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/inpaint"
    },
    "CheckpointLoader": {
      "title": "CheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: config_name, ckpt_name",
          "properties": {
            "config_name": {
              "type": "string"
            },
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["config_name", "ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders"
    },
    "DiffusersLoader": {
      "title": "DiffusersLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_path",
          "properties": {
            "model_path": {
              "type": "string"
            }
          },
          "required": ["model_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders/deprecated"
    },
    "LoadLatent": {
      "title": "LoadLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "string"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "SaveLatent": {
      "title": "SaveLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, filename_prefix",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["samples", "filename_prefix"]
        }
      },
      "$category": "_for_testing"
    },
    "ConditioningZeroOut": {
      "title": "ConditioningZeroOut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ConditioningSetTimestepRange": {
      "title": "ConditioningSetTimestepRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, start, end",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "start": {
              "type": "number"
            },
            "end": {
              "type": "number"
            }
          },
          "required": ["conditioning", "start", "end"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "LoraLoaderModelOnly": {
      "title": "LoraLoaderModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "LatentAdd": {
      "title": "LatentAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentSubtract": {
      "title": "LatentSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentMultiply": {
      "title": "LatentMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, multiplier",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["samples", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentInterpolate": {
      "title": "LatentInterpolate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, ratio",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentBatch": {
      "title": "LatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "LatentBatchSeedBehavior": {
      "title": "LatentBatchSeedBehavior",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, seed_behavior",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "seed_behavior": {
              "type": "string"
            }
          },
          "required": ["samples", "seed_behavior"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "HypernetworkLoader": {
      "title": "HypernetworkLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, hypernetwork_name, strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "hypernetwork_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["model", "hypernetwork_name", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "UpscaleModelLoader": {
      "title": "UpscaleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: UPSCALE_MODEL",
          "items": [
            {
              "type": "UPSCALE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "ImageUpscaleWithModel": {
      "title": "ImageUpscaleWithModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_model, image",
          "properties": {
            "upscale_model": {
              "type": "UPSCALE_MODEL"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["upscale_model", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageBlend": {
      "title": "Blend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, blend_factor, blend_mode",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "blend_factor": {
              "type": "number"
            },
            "blend_mode": {
              "type": "string"
            }
          },
          "required": ["image1", "image2", "blend_factor", "blend_mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageBlur": {
      "title": "Blur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, blur_radius, sigma",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "blur_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            }
          },
          "required": ["image", "blur_radius", "sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageQuantize": {
      "title": "Quantize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, colors, dither",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "colors": {
              "type": "number"
            },
            "dither": {
              "type": "string"
            }
          },
          "required": ["image", "colors", "dither"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageSharpen": {
      "title": "Sharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sharpen_radius, sigma, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sharpen_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            }
          },
          "required": ["image", "sharpen_radius", "sigma", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageScaleToTotalPixels": {
      "title": "ImageScaleToTotalPixels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "megapixels": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "megapixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "LatentCompositeMasked": {
      "title": "LatentCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "LATENT"
            },
            "source": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "ImageCompositeMasked": {
      "title": "ImageCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "IMAGE"
            },
            "source": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "MaskToImage": {
      "title": "MaskToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageToMask": {
      "title": "ImageToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageColorToMask": {
      "title": "ImageColorToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["image", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "SolidMask": {
      "title": "SolidMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, width, height",
          "properties": {
            "value": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["value", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "InvertMask": {
      "title": "InvertMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "CropMask": {
      "title": "CropMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, x, y, width, height",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["mask", "x", "y", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "MaskComposite": {
      "title": "MaskComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, operation",
          "properties": {
            "destination": {
              "type": "MASK"
            },
            "source": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "operation": {
              "type": "string"
            }
          },
          "required": ["destination", "source", "x", "y", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "FeatherMask": {
      "title": "FeatherMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, left, top, right, bottom",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            }
          },
          "required": ["mask", "left", "top", "right", "bottom"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "GrowMask": {
      "title": "GrowMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, expand, tapered_corners",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "expand": {
              "type": "number"
            },
            "tapered_corners": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "expand", "tapered_corners"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ThresholdMask": {
      "title": "ThresholdMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, value",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "value": {
              "type": "number"
            }
          },
          "required": ["mask", "value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "PorterDuffImageComposite": {
      "title": "PorterDuffImageComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source, source_alpha, destination, destination_alpha, mode",
          "properties": {
            "source": {
              "type": "IMAGE"
            },
            "source_alpha": {
              "type": "MASK"
            },
            "destination": {
              "type": "IMAGE"
            },
            "destination_alpha": {
              "type": "MASK"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "source_alpha",
            "destination",
            "destination_alpha",
            "mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "SplitImageWithAlpha": {
      "title": "SplitImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "JoinImageWithAlpha": {
      "title": "JoinImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "alpha": {
              "type": "MASK"
            }
          },
          "required": ["image", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask/compositing"
    },
    "RebatchLatents": {
      "title": "LatentRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latents, batch_size",
          "properties": {
            "latents": {
              "type": "LATENT"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["latents", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RebatchImages": {
      "title": "ImageRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, batch_size",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["images", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "ModelMergeSimple": {
      "title": "ModelMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, ratio",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeBlocks": {
      "title": "ModelMergeBlocks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, input, middle, out",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "input": {
              "type": "number"
            },
            "middle": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "input", "middle", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeSubtract": {
      "title": "ModelSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, multiplier",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeAdd": {
      "title": "ModelAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            }
          },
          "required": ["model1", "model2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CheckpointSave": {
      "title": "CheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip", "vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSimple": {
      "title": "CLIPMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, ratio",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSubtract": {
      "title": "CLIPSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, multiplier",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeAdd": {
      "title": "CLIPAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            }
          },
          "required": ["clip1", "clip2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPSave": {
      "title": "CLIPSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, filename_prefix",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["clip", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "VAESave": {
      "title": "VAESave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, filename_prefix",
          "properties": {
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "TomePatchModel": {
      "title": "TomePatchModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ratio",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "CLIPTextEncodeSDXLRefiner": {
      "title": "CLIPTextEncodeSDXLRefiner",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ascore, width, height, text, clip",
          "properties": {
            "ascore": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["ascore", "width", "height", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeSDXL": {
      "title": "CLIPTextEncodeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, crop_w, crop_h, target_width, target_height, text_g, clip, text_l",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop_w": {
              "type": "number"
            },
            "crop_h": {
              "type": "number"
            },
            "target_width": {
              "type": "number"
            },
            "target_height": {
              "type": "number"
            },
            "text_g": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            },
            "text_l": {
              "type": "string"
            }
          },
          "required": [
            "width",
            "height",
            "crop_w",
            "crop_h",
            "target_width",
            "target_height",
            "text_g",
            "clip",
            "text_l"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "Canny": {
      "title": "Canny",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, low_threshold, high_threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "low_threshold": {
              "type": "number"
            },
            "high_threshold": {
              "type": "number"
            }
          },
          "required": ["image", "low_threshold", "high_threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/preprocessors"
    },
    "FreeU": {
      "title": "FreeU",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "FreeU_V2": {
      "title": "FreeU_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "SamplerCustom": {
      "title": "SamplerCustom",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, cfg, positive, negative, sampler, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "BOOLEAN"
            },
            "noise_seed": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "cfg",
            "positive",
            "negative",
            "sampler",
            "sigmas",
            "latent_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "BasicScheduler": {
      "title": "BasicScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scheduler, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scheduler": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "scheduler", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KarrasScheduler": {
      "title": "KarrasScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "ExponentialScheduler": {
      "title": "ExponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "PolyexponentialScheduler": {
      "title": "PolyexponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "VPScheduler": {
      "title": "VPScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, beta_d, beta_min, eps_s",
          "properties": {
            "steps": {
              "type": "number"
            },
            "beta_d": {
              "type": "number"
            },
            "beta_min": {
              "type": "number"
            },
            "eps_s": {
              "type": "number"
            }
          },
          "required": ["steps", "beta_d", "beta_min", "eps_s"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "BetaSamplingScheduler": {
      "title": "BetaSamplingScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, alpha, beta",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            },
            "beta": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "alpha", "beta"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SDTurboScheduler": {
      "title": "SDTurboScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KSamplerSelect": {
      "title": "KSamplerSelect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sampler_name",
          "properties": {
            "sampler_name": {
              "type": "string"
            }
          },
          "required": ["sampler_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestral": {
      "title": "SamplerEulerAncestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestralCFGPP": {
      "title": "SamplerEulerAncestralCFGPP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerLMS": {
      "title": "SamplerLMS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order",
          "properties": {
            "order": {
              "type": "number"
            }
          },
          "required": ["order"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_3M_SDE": {
      "title": "SamplerDPMPP_3M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2M_SDE": {
      "title": "SamplerDPMPP_2M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: solver_type, eta, s_noise, noise_device",
          "properties": {
            "solver_type": {
              "type": "string"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["solver_type", "eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_SDE": {
      "title": "SamplerDPMPP_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, r, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "r": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "r", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2S_Ancestral": {
      "title": "SamplerDPMPP_2S_Ancestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMAdaptative": {
      "title": "SamplerDPMAdaptative",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order, rtol, atol, h_init, pcoeff, icoeff, dcoeff, accept_safety, eta, s_noise",
          "properties": {
            "order": {
              "type": "number"
            },
            "rtol": {
              "type": "number"
            },
            "atol": {
              "type": "number"
            },
            "h_init": {
              "type": "number"
            },
            "pcoeff": {
              "type": "number"
            },
            "icoeff": {
              "type": "number"
            },
            "dcoeff": {
              "type": "number"
            },
            "accept_safety": {
              "type": "number"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": [
            "order",
            "rtol",
            "atol",
            "h_init",
            "pcoeff",
            "icoeff",
            "dcoeff",
            "accept_safety",
            "eta",
            "s_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SplitSigmas": {
      "title": "SplitSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, step",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "step": {
              "type": "number"
            }
          },
          "required": ["sigmas", "step"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "SplitSigmasDenoise": {
      "title": "SplitSigmasDenoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, denoise",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["sigmas", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "FlipSigmas": {
      "title": "FlipSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            }
          },
          "required": ["sigmas"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "CFGGuider": {
      "title": "CFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            }
          },
          "required": ["model", "positive", "negative", "cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "DualCFGGuider": {
      "title": "DualCFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, cond1, cond2, negative, cfg_conds, cfg_cond2_negative",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "cond1": {
              "type": "CONDITIONING"
            },
            "cond2": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg_conds": {
              "type": "number"
            },
            "cfg_cond2_negative": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "cond1",
            "cond2",
            "negative",
            "cfg_conds",
            "cfg_cond2_negative"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "BasicGuider": {
      "title": "BasicGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, conditioning",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["model", "conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "RandomNoise": {
      "title": "RandomNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise_seed",
          "properties": {
            "noise_seed": {
              "type": "number"
            }
          },
          "required": ["noise_seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "DisableNoise": {
      "title": "DisableNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "AddNoise": {
      "title": "AddNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, noise, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "noise": {
              "type": "NOISE"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["model", "noise", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/custom_sampling/noise"
    },
    "SamplerCustomAdvanced": {
      "title": "SamplerCustomAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise, guider, sampler, sigmas, latent_image",
          "properties": {
            "noise": {
              "type": "NOISE"
            },
            "guider": {
              "type": "GUIDER"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["noise", "guider", "sampler", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "HyperTile": {
      "title": "HyperTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, tile_size, swap_size, max_depth, scale_depth",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "tile_size": {
              "type": "number"
            },
            "swap_size": {
              "type": "number"
            },
            "max_depth": {
              "type": "number"
            },
            "scale_depth": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "model",
            "tile_size",
            "swap_size",
            "max_depth",
            "scale_depth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "ModelSamplingDiscrete": {
      "title": "ModelSamplingDiscrete",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, zsnr",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "zsnr": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model", "sampling", "zsnr"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousEDM": {
      "title": "ModelSamplingContinuousEDM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousV": {
      "title": "ModelSamplingContinuousV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingStableCascade": {
      "title": "ModelSamplingStableCascade",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingSD3": {
      "title": "ModelSamplingSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingAuraFlow": {
      "title": "ModelSamplingAuraFlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingFlux": {
      "title": "ModelSamplingFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_shift, base_shift, width, height",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "max_shift": {
              "type": "number"
            },
            "base_shift": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["model", "max_shift", "base_shift", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "RescaleCFG": {
      "title": "RescaleCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, multiplier",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "PatchModelAddDownscale": {
      "title": "PatchModelAddDownscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, block_number, downscale_factor, start_percent, end_percent, downscale_after_skip, downscale_method, upscale_method",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "block_number": {
              "type": "number"
            },
            "downscale_factor": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "downscale_after_skip": {
              "type": "BOOLEAN"
            },
            "downscale_method": {
              "type": "string"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "block_number",
            "downscale_factor",
            "start_percent",
            "end_percent",
            "downscale_after_skip",
            "downscale_method",
            "upscale_method"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "ImageCrop": {
      "title": "ImageCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, x, y",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["image", "width", "height", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/transform"
    },
    "RepeatImageBatch": {
      "title": "RepeatImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, amount",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["image", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "ImageFromBatch": {
      "title": "ImageFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, batch_index, length",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "batch_index": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["image", "batch_index", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "SaveAnimatedWEBP": {
      "title": "SaveAnimatedWEBP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, fps, lossless, quality, method",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            },
            "lossless": {
              "type": "BOOLEAN"
            },
            "quality": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "filename_prefix",
            "fps",
            "lossless",
            "quality",
            "method"
          ]
        }
      },
      "$category": "image/animation"
    },
    "SaveAnimatedPNG": {
      "title": "SaveAnimatedPNG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, fps, compress_level",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            },
            "compress_level": {
              "type": "number"
            }
          },
          "required": ["images", "filename_prefix", "fps", "compress_level"]
        }
      },
      "$category": "image/animation"
    },
    "ImageOnlyCheckpointLoader": {
      "title": "ImageOnlyCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP_VISION, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP_VISION"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders/video_models"
    },
    "SVD_img2vid_Conditioning": {
      "title": "SVD_img2vid_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, motion_bucket_id, fps, augmentation_level",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "motion_bucket_id": {
              "type": "number"
            },
            "fps": {
              "type": "number"
            },
            "augmentation_level": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "motion_bucket_id",
            "fps",
            "augmentation_level"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "VideoLinearCFGGuidance": {
      "title": "VideoLinearCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "VideoTriangleCFGGuidance": {
      "title": "VideoTriangleCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "ImageOnlyCheckpointSave": {
      "title": "ImageOnlyCheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip_vision, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip_vision", "vae", "filename_prefix"]
        }
      },
      "$category": "_for_testing"
    },
    "SelfAttentionGuidance": {
      "title": "SelfAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale, blur_sigma",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            },
            "blur_sigma": {
              "type": "number"
            }
          },
          "required": ["model", "scale", "blur_sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNeg": {
      "title": "PerpNeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, empty_conditioning, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": ["model", "empty_conditioning", "neg_scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNegGuider": {
      "title": "PerpNegGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, empty_conditioning, cfg, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "positive",
            "negative",
            "empty_conditioning",
            "cfg",
            "neg_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "StableZero123_Conditioning": {
      "title": "StableZero123_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "StableZero123_Conditioning_Batched": {
      "title": "StableZero123_Conditioning_Batched",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth, elevation_batch_increment, azimuth_batch_increment",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            },
            "elevation_batch_increment": {
              "type": "number"
            },
            "azimuth_batch_increment": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth",
            "elevation_batch_increment",
            "azimuth_batch_increment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SV3D_Conditioning": {
      "title": "SV3D_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, elevation",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "elevation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SD_4XUpscale_Conditioning": {
      "title": "SD_4XUpscale_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, positive, negative, scale_ratio, noise_augmentation",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "scale_ratio": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "positive",
            "negative",
            "scale_ratio",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/upscale_diffusion"
    },
    "PhotoMakerLoader": {
      "title": "PhotoMakerLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker_model_name",
          "properties": {
            "photomaker_model_name": {
              "type": "string"
            }
          },
          "required": ["photomaker_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PHOTOMAKER",
          "items": [
            {
              "type": "PHOTOMAKER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "PhotoMakerEncode": {
      "title": "PhotoMakerEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker, image, clip, text",
          "properties": {
            "photomaker": {
              "type": "PHOTOMAKER"
            },
            "image": {
              "type": "IMAGE"
            },
            "clip": {
              "type": "CLIP"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["photomaker", "image", "clip", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "CLIPTextEncodeControlnet": {
      "title": "CLIPTextEncodeControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, conditioning, text",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "conditioning": {
              "type": "CONDITIONING"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["clip", "conditioning", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/conditioning"
    },
    "Morphology": {
      "title": "Morphology",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, operation, kernel_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "operation": {
              "type": "string"
            },
            "kernel_size": {
              "type": "number"
            }
          },
          "required": ["image", "operation", "kernel_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "StableCascade_EmptyLatentImage": {
      "title": "StableCascade_EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, compression, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "compression": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "compression", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_StageB_Conditioning": {
      "title": "StableCascade_StageB_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, stage_c",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "stage_c": {
              "type": "LATENT"
            }
          },
          "required": ["conditioning", "stage_c"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/stable_cascade"
    },
    "StableCascade_StageC_VAEEncode": {
      "title": "StableCascade_StageC_VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, compression",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "compression": {
              "type": "number"
            }
          },
          "required": ["image", "vae", "compression"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_SuperResolutionControlnet": {
      "title": "StableCascade_SuperResolutionControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["image", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LATENT, LATENT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "_for_testing/stable_cascade"
    },
    "DifferentialDiffusion": {
      "title": "DifferentialDiffusion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "InstructPixToPixConditioning": {
      "title": "InstructPixToPixConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            }
          },
          "required": ["positive", "negative", "vae", "pixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/instructpix2pix"
    },
    "ModelMergeSD1": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD2": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSDXL": {
      "title": "ModelMergeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0, input_blocks.1, input_blocks.2, input_blocks.3, input_blocks.4, input_blocks.5, input_blocks.6, input_blocks.7, input_blocks.8, middle_block.0, middle_block.1, middle_block.2, output_blocks.0, output_blocks.1, output_blocks.2, output_blocks.3, output_blocks.4, output_blocks.5, output_blocks.6, output_blocks.7, output_blocks.8, out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0": {
              "type": "number"
            },
            "input_blocks.1": {
              "type": "number"
            },
            "input_blocks.2": {
              "type": "number"
            },
            "input_blocks.3": {
              "type": "number"
            },
            "input_blocks.4": {
              "type": "number"
            },
            "input_blocks.5": {
              "type": "number"
            },
            "input_blocks.6": {
              "type": "number"
            },
            "input_blocks.7": {
              "type": "number"
            },
            "input_blocks.8": {
              "type": "number"
            },
            "middle_block.0": {
              "type": "number"
            },
            "middle_block.1": {
              "type": "number"
            },
            "middle_block.2": {
              "type": "number"
            },
            "output_blocks.0": {
              "type": "number"
            },
            "output_blocks.1": {
              "type": "number"
            },
            "output_blocks.2": {
              "type": "number"
            },
            "output_blocks.3": {
              "type": "number"
            },
            "output_blocks.4": {
              "type": "number"
            },
            "output_blocks.5": {
              "type": "number"
            },
            "output_blocks.6": {
              "type": "number"
            },
            "output_blocks.7": {
              "type": "number"
            },
            "output_blocks.8": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0",
            "input_blocks.1",
            "input_blocks.2",
            "input_blocks.3",
            "input_blocks.4",
            "input_blocks.5",
            "input_blocks.6",
            "input_blocks.7",
            "input_blocks.8",
            "middle_block.0",
            "middle_block.1",
            "middle_block.2",
            "output_blocks.0",
            "output_blocks.1",
            "output_blocks.2",
            "output_blocks.3",
            "output_blocks.4",
            "output_blocks.5",
            "output_blocks.6",
            "output_blocks.7",
            "output_blocks.8",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD3_2B": {
      "title": "ModelMergeSD3_2B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embed., x_embedder., context_embedder., y_embedder., t_embedder., joint_blocks.0., joint_blocks.1., joint_blocks.2., joint_blocks.3., joint_blocks.4., joint_blocks.5., joint_blocks.6., joint_blocks.7., joint_blocks.8., joint_blocks.9., joint_blocks.10., joint_blocks.11., joint_blocks.12., joint_blocks.13., joint_blocks.14., joint_blocks.15., joint_blocks.16., joint_blocks.17., joint_blocks.18., joint_blocks.19., joint_blocks.20., joint_blocks.21., joint_blocks.22., joint_blocks.23., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embed.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "context_embedder.": {
              "type": "number"
            },
            "y_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "joint_blocks.0.": {
              "type": "number"
            },
            "joint_blocks.1.": {
              "type": "number"
            },
            "joint_blocks.2.": {
              "type": "number"
            },
            "joint_blocks.3.": {
              "type": "number"
            },
            "joint_blocks.4.": {
              "type": "number"
            },
            "joint_blocks.5.": {
              "type": "number"
            },
            "joint_blocks.6.": {
              "type": "number"
            },
            "joint_blocks.7.": {
              "type": "number"
            },
            "joint_blocks.8.": {
              "type": "number"
            },
            "joint_blocks.9.": {
              "type": "number"
            },
            "joint_blocks.10.": {
              "type": "number"
            },
            "joint_blocks.11.": {
              "type": "number"
            },
            "joint_blocks.12.": {
              "type": "number"
            },
            "joint_blocks.13.": {
              "type": "number"
            },
            "joint_blocks.14.": {
              "type": "number"
            },
            "joint_blocks.15.": {
              "type": "number"
            },
            "joint_blocks.16.": {
              "type": "number"
            },
            "joint_blocks.17.": {
              "type": "number"
            },
            "joint_blocks.18.": {
              "type": "number"
            },
            "joint_blocks.19.": {
              "type": "number"
            },
            "joint_blocks.20.": {
              "type": "number"
            },
            "joint_blocks.21.": {
              "type": "number"
            },
            "joint_blocks.22.": {
              "type": "number"
            },
            "joint_blocks.23.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embed.",
            "x_embedder.",
            "context_embedder.",
            "y_embedder.",
            "t_embedder.",
            "joint_blocks.0.",
            "joint_blocks.1.",
            "joint_blocks.2.",
            "joint_blocks.3.",
            "joint_blocks.4.",
            "joint_blocks.5.",
            "joint_blocks.6.",
            "joint_blocks.7.",
            "joint_blocks.8.",
            "joint_blocks.9.",
            "joint_blocks.10.",
            "joint_blocks.11.",
            "joint_blocks.12.",
            "joint_blocks.13.",
            "joint_blocks.14.",
            "joint_blocks.15.",
            "joint_blocks.16.",
            "joint_blocks.17.",
            "joint_blocks.18.",
            "joint_blocks.19.",
            "joint_blocks.20.",
            "joint_blocks.21.",
            "joint_blocks.22.",
            "joint_blocks.23.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeFlux1": {
      "title": "ModelMergeFlux1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, img_in., time_in., guidance_in, vector_in., txt_in., double_blocks.0., double_blocks.1., double_blocks.2., double_blocks.3., double_blocks.4., double_blocks.5., double_blocks.6., double_blocks.7., double_blocks.8., double_blocks.9., double_blocks.10., double_blocks.11., double_blocks.12., double_blocks.13., double_blocks.14., double_blocks.15., double_blocks.16., double_blocks.17., double_blocks.18., single_blocks.0., single_blocks.1., single_blocks.2., single_blocks.3., single_blocks.4., single_blocks.5., single_blocks.6., single_blocks.7., single_blocks.8., single_blocks.9., single_blocks.10., single_blocks.11., single_blocks.12., single_blocks.13., single_blocks.14., single_blocks.15., single_blocks.16., single_blocks.17., single_blocks.18., single_blocks.19., single_blocks.20., single_blocks.21., single_blocks.22., single_blocks.23., single_blocks.24., single_blocks.25., single_blocks.26., single_blocks.27., single_blocks.28., single_blocks.29., single_blocks.30., single_blocks.31., single_blocks.32., single_blocks.33., single_blocks.34., single_blocks.35., single_blocks.36., single_blocks.37., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "img_in.": {
              "type": "number"
            },
            "time_in.": {
              "type": "number"
            },
            "guidance_in": {
              "type": "number"
            },
            "vector_in.": {
              "type": "number"
            },
            "txt_in.": {
              "type": "number"
            },
            "double_blocks.0.": {
              "type": "number"
            },
            "double_blocks.1.": {
              "type": "number"
            },
            "double_blocks.2.": {
              "type": "number"
            },
            "double_blocks.3.": {
              "type": "number"
            },
            "double_blocks.4.": {
              "type": "number"
            },
            "double_blocks.5.": {
              "type": "number"
            },
            "double_blocks.6.": {
              "type": "number"
            },
            "double_blocks.7.": {
              "type": "number"
            },
            "double_blocks.8.": {
              "type": "number"
            },
            "double_blocks.9.": {
              "type": "number"
            },
            "double_blocks.10.": {
              "type": "number"
            },
            "double_blocks.11.": {
              "type": "number"
            },
            "double_blocks.12.": {
              "type": "number"
            },
            "double_blocks.13.": {
              "type": "number"
            },
            "double_blocks.14.": {
              "type": "number"
            },
            "double_blocks.15.": {
              "type": "number"
            },
            "double_blocks.16.": {
              "type": "number"
            },
            "double_blocks.17.": {
              "type": "number"
            },
            "double_blocks.18.": {
              "type": "number"
            },
            "single_blocks.0.": {
              "type": "number"
            },
            "single_blocks.1.": {
              "type": "number"
            },
            "single_blocks.2.": {
              "type": "number"
            },
            "single_blocks.3.": {
              "type": "number"
            },
            "single_blocks.4.": {
              "type": "number"
            },
            "single_blocks.5.": {
              "type": "number"
            },
            "single_blocks.6.": {
              "type": "number"
            },
            "single_blocks.7.": {
              "type": "number"
            },
            "single_blocks.8.": {
              "type": "number"
            },
            "single_blocks.9.": {
              "type": "number"
            },
            "single_blocks.10.": {
              "type": "number"
            },
            "single_blocks.11.": {
              "type": "number"
            },
            "single_blocks.12.": {
              "type": "number"
            },
            "single_blocks.13.": {
              "type": "number"
            },
            "single_blocks.14.": {
              "type": "number"
            },
            "single_blocks.15.": {
              "type": "number"
            },
            "single_blocks.16.": {
              "type": "number"
            },
            "single_blocks.17.": {
              "type": "number"
            },
            "single_blocks.18.": {
              "type": "number"
            },
            "single_blocks.19.": {
              "type": "number"
            },
            "single_blocks.20.": {
              "type": "number"
            },
            "single_blocks.21.": {
              "type": "number"
            },
            "single_blocks.22.": {
              "type": "number"
            },
            "single_blocks.23.": {
              "type": "number"
            },
            "single_blocks.24.": {
              "type": "number"
            },
            "single_blocks.25.": {
              "type": "number"
            },
            "single_blocks.26.": {
              "type": "number"
            },
            "single_blocks.27.": {
              "type": "number"
            },
            "single_blocks.28.": {
              "type": "number"
            },
            "single_blocks.29.": {
              "type": "number"
            },
            "single_blocks.30.": {
              "type": "number"
            },
            "single_blocks.31.": {
              "type": "number"
            },
            "single_blocks.32.": {
              "type": "number"
            },
            "single_blocks.33.": {
              "type": "number"
            },
            "single_blocks.34.": {
              "type": "number"
            },
            "single_blocks.35.": {
              "type": "number"
            },
            "single_blocks.36.": {
              "type": "number"
            },
            "single_blocks.37.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "img_in.",
            "time_in.",
            "guidance_in",
            "vector_in.",
            "txt_in.",
            "double_blocks.0.",
            "double_blocks.1.",
            "double_blocks.2.",
            "double_blocks.3.",
            "double_blocks.4.",
            "double_blocks.5.",
            "double_blocks.6.",
            "double_blocks.7.",
            "double_blocks.8.",
            "double_blocks.9.",
            "double_blocks.10.",
            "double_blocks.11.",
            "double_blocks.12.",
            "double_blocks.13.",
            "double_blocks.14.",
            "double_blocks.15.",
            "double_blocks.16.",
            "double_blocks.17.",
            "double_blocks.18.",
            "single_blocks.0.",
            "single_blocks.1.",
            "single_blocks.2.",
            "single_blocks.3.",
            "single_blocks.4.",
            "single_blocks.5.",
            "single_blocks.6.",
            "single_blocks.7.",
            "single_blocks.8.",
            "single_blocks.9.",
            "single_blocks.10.",
            "single_blocks.11.",
            "single_blocks.12.",
            "single_blocks.13.",
            "single_blocks.14.",
            "single_blocks.15.",
            "single_blocks.16.",
            "single_blocks.17.",
            "single_blocks.18.",
            "single_blocks.19.",
            "single_blocks.20.",
            "single_blocks.21.",
            "single_blocks.22.",
            "single_blocks.23.",
            "single_blocks.24.",
            "single_blocks.25.",
            "single_blocks.26.",
            "single_blocks.27.",
            "single_blocks.28.",
            "single_blocks.29.",
            "single_blocks.30.",
            "single_blocks.31.",
            "single_blocks.32.",
            "single_blocks.33.",
            "single_blocks.34.",
            "single_blocks.35.",
            "single_blocks.36.",
            "single_blocks.37.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "PerturbedAttentionGuidance": {
      "title": "PerturbedAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            }
          },
          "required": ["model", "scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "AlignYourStepsScheduler": {
      "title": "AlignYourStepsScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, steps, denoise",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model_type", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "UNetSelfAttentionMultiply": {
      "title": "UNetSelfAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetCrossAttentionMultiply": {
      "title": "UNetCrossAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "CLIPAttentionMultiply": {
      "title": "CLIPAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, q, k, v, out",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["clip", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetTemporalAttentionMultiply": {
      "title": "UNetTemporalAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, self_structural, self_temporal, cross_structural, cross_temporal",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "self_structural": {
              "type": "number"
            },
            "self_temporal": {
              "type": "number"
            },
            "cross_structural": {
              "type": "number"
            },
            "cross_temporal": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "self_structural",
            "self_temporal",
            "cross_structural",
            "cross_temporal"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "SamplerLCMUpscale": {
      "title": "SamplerLCMUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale_ratio, scale_steps, upscale_method",
          "properties": {
            "scale_ratio": {
              "type": "number"
            },
            "scale_steps": {
              "type": "number"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": ["scale_ratio", "scale_steps", "upscale_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerCFGpp": {
      "title": "SamplerEulerCFGpp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: version",
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": ["version"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "WebcamCapture": {
      "title": "WebcamCapture",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, capture_on_queue",
          "properties": {
            "image": {
              "type": "WEBCAM"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "capture_on_queue": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "width", "height", "capture_on_queue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "EmptyLatentAudio": {
      "title": "EmptyLatentAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seconds",
          "properties": {
            "seconds": {
              "type": "number"
            }
          },
          "required": ["seconds"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEEncodeAudio": {
      "title": "VAEEncodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, vae",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["audio", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEDecodeAudio": {
      "title": "VAEDecodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "SaveAudio": {
      "title": "SaveAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, filename_prefix",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["audio", "filename_prefix"]
        }
      },
      "$category": "audio"
    },
    "LoadAudio": {
      "title": "LoadAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "string"
            }
          },
          "required": ["audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "audio"
    },
    "PreviewAudio": {
      "title": "PreviewAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "AUDIO"
            }
          },
          "required": ["audio"]
        }
      },
      "$category": "audio"
    },
    "TripleCLIPLoader": {
      "title": "TripleCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "EmptySD3LatentImage": {
      "title": "EmptySD3LatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/sd3"
    },
    "CLIPTextEncodeSD3": {
      "title": "CLIPTextEncodeSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, clip_g, t5xxl, empty_padding",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "clip_g": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "empty_padding": {
              "type": "string"
            }
          },
          "required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ControlNetApplySD3": {
      "title": "ControlNetApplySD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, vae, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "vae",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "GITSScheduler": {
      "title": "GITSScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coeff, steps, denoise",
          "properties": {
            "coeff": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["coeff", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SetUnionControlNetType": {
      "title": "SetUnionControlNetType",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, type",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["control_net", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "CLIPTextEncodeHunyuanDiT": {
      "title": "CLIPTextEncodeHunyuanDiT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, bert, mt5xl",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "bert": {
              "type": "string"
            },
            "mt5xl": {
              "type": "string"
            }
          },
          "required": ["clip", "bert", "mt5xl"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeFlux": {
      "title": "CLIPTextEncodeFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, t5xxl, guidance",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["clip", "clip_l", "t5xxl", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxGuidance": {
      "title": "FluxGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, guidance",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["conditioning", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    }
  }
}
